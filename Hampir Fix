#include <windows.h>
#include <stdlib.h>
#include <math.h>
#include <GL/freeglut.h>

void init(void);
void tampil(void);
void keyboard(unsigned char, int, int);
void mouse(int button, int state, int x, int y);
void ukuran(int, int);
void mouseMotion(int x, int y);

int is_depth;
float xrot = 0.0f;
float yrot = 0.0f;
float zrot = 0.0f;
float xmov = 0.0f;
float ymov = 0.0f;
float zmov = 0.0f;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mouseDown = false;
//deklarasi pembuatan lingkaran
const double PI = 3.142857143;
int i, radius, jumlah_titik, x_tengah, y_tengah, n;
//deklarasi gerakan otomatis
int gerak = 0;
bool atas = true;

//db : depan-belakang
//kk : kiri-kanan
//ab : atas-bawah

void db(float xkiri, float xkanan, float ybawah, float yatas, float z) {
    glBegin(GL_QUADS);
    glVertex3f(xkiri, ybawah, z);
    glVertex3f(xkiri, yatas, z);
    glVertex3f(xkanan, yatas, z);
    glVertex3f(xkanan, ybawah, z);
    glEnd();
}

void db2(float xkiri, float xkiri2, float xkanan, float xkanan2, float ybawah, float yatas, float z) {
    glBegin(GL_QUADS);
    glVertex3f(xkiri, ybawah, z);
    glVertex3f(xkiri2, yatas, z);
    glVertex3f(xkanan2, yatas, z);
    glVertex3f(xkanan, ybawah, z);
    glEnd();
}

void bingkai(float xkiri, float xkanan, float ybawah, float yatas, float z) {
    glBegin(GL_LINE_LOOP);
    glVertex3f(xkiri, ybawah, z);
    glVertex3f(xkiri, yatas, z);
    glVertex3f(xkanan, yatas, z);
    glVertex3f(xkanan, ybawah, z);
    glEnd();
}

void kk(float xsisi, float ybawah, float yatas, float zdepan, float zbelakang) {
    glBegin(GL_QUADS);
    glVertex3f(xsisi, ybawah, zdepan);
    glVertex3f(xsisi, yatas, zdepan);
    glVertex3f(xsisi, yatas, zbelakang);
    glVertex3f(xsisi, ybawah, zbelakang);
    glEnd();
}

void kk2(float xsisi1, float xsisi2, float ybawah, float yatas, float zdepan, float zbelakang) {
    glBegin(GL_QUADS);
    glVertex3f(xsisi1, ybawah, zdepan);
    glVertex3f(xsisi2, yatas, zdepan);
    glVertex3f(xsisi2, yatas, zbelakang);
    glVertex3f(xsisi1, ybawah, zbelakang);
    glEnd();
}

void ab(float xkiri, float xkanan, float y, float zdepan, float zbelakang) {
    glBegin(GL_QUADS);
    glVertex3f(xkiri, y, zdepan);
    glVertex3f(xkanan, y, zdepan);
    glVertex3f(xkanan, y, zbelakang);
    glVertex3f(xkiri, y, zbelakang);
    glEnd();
}

void lingkaran(int radius, int n_titik, int x_tgh, int y_tgh, float z)
{
    glBegin(GL_POLYGON);
    for (i = 0; i <= 360; i++) {
        float angle = i * (2 * PI / n_titik);
        float x = x_tgh + radius * cos(angle);
        float y = y_tgh + radius * sin(angle);
        glVertex3f(x, y, z);
        glColor3f(0.8, 0.4, 0.4);
    }
    glEnd();
}

void s3(float xkiri, float xtengah, float xkanan, float ybawah, float yatas, float z)
{
    glBegin(GL_TRIANGLES);
    glVertex3f(xkiri, ybawah, z);
    glVertex3f(xtengah, yatas, z);
    glVertex3f(xkanan, ybawah, z);
    glEnd();
}

void tambahan2() {
       //tambahan
        glColor3f(0.87, 0.71, 0.71);

        //DEPAN
        //tiangkiri
        //depankiri

        glBegin(GL_QUADS);
        glVertex3f(-82.0, -78.0, 3.0);
        glVertex3f(-90.0, -48.0, 6.0);
        glVertex3f(-77.0, -48.0, 6.0);
        glVertex3f(-77.0, -78.0, 3.0);
        glEnd();

        glColor3f(0.77, 0.61, 0.61);
        glBegin(GL_QUADS);
        glVertex3f(-82.0, -78.0, 3.0);
        glVertex3f(-90.0, -48.0, 6.0);
        glVertex3f(-90.0, -48.0, -3.0);
        glVertex3f(-82.0, -78.0, -3.0);
        glEnd();

        //kirikanan
        glColor3f(0.77, 0.61, 0.61);
        glBegin(GL_QUADS);
        glVertex3f(-77.0, -78.0, 3.0);
        glVertex3f(-77.0, -48.0, 6.0);
        glVertex3f(-77.0, -48.0, 0.0);
        glVertex3f(-77.0, -78.0, 0.0);
        glEnd();

        //kirikiri
        glColor3f(0.77, 0.61, 0.61);
        glBegin(GL_QUADS);
        glVertex3f(-82.0, -78.0, -12.0);
        glVertex3f(-90.0, -48.0, -12.0);
        glVertex3f(-90.0, -48.0, -21.0);
        glVertex3f(-82.0, -78.0, -18.0);
        glEnd();

        glColor3f(0.87, 0.71, 0.71);
        glBegin(GL_QUADS);
        glVertex3f(-82.0, -78.0, -18.0);
        glVertex3f(-90.0, -48.0, -21.0);
        glVertex3f(-77.0, -48.0, -21.0);
        glVertex3f(-77.0, -78.0, -18.0);
        glEnd();

        //kirinya kanan
        glColor3f(0.77, 0.61, 0.61);
        glBegin(GL_QUADS);
        glVertex3f(-63.0, -78.0, -12.0);
        glVertex3f(-55.0, -48.0, -12.0);
        glVertex3f(-55.0, -48.0, -21.0);
        glVertex3f(-63.0, -78.0, -18.0);
        glEnd();

        glBegin(GL_QUADS);
        glVertex3f(-63.0, -78.0, 3.0);
        glVertex3f(-55.0, -48.0, 6.0);
        glVertex3f(-55.0, -48.0, -3.0);
        glVertex3f(-63.0, -78.0, -3.0);
        glEnd();

        glColor3f(0.77, 0.61, 0.61);
        glBegin(GL_QUADS);
        glVertex3f(-68.0, -78.0, -3.0);
        glVertex3f(-68.0, -48.0, -3.0);
        glVertex3f(-55.0, -48.0, -3.0);
        glVertex3f(-63.0, -78.0, -3.0);
        glEnd();

        glBegin(GL_QUADS);
        glVertex3f(-68.0, -78.0, -12.0);
        glVertex3f(-68.0, -48.0, -12.0);
        glVertex3f(-55.0, -48.0, -12.0);
        glVertex3f(-63.0, -78.0, -12.0);
        glEnd();

        glBegin(GL_QUADS);
        glVertex3f(-82.0, -78.0, -3.0);
        glVertex3f(-90.0, -48.0, -3.0);
        glVertex3f(-77.0, -48.0, -3.0);
        glVertex3f(-77.0, -78.0, -3.0);
        glEnd();

        glColor3f(0.87, 0.71, 0.71);
        glBegin(GL_QUADS);
        glVertex3f(-68.0, -78.0, 3.0);
        glVertex3f(-68.0, -48.0, 6.0);
        glVertex3f(-55.0, -48.0, 6.0);
        glVertex3f(-63.0, -78.0, 3.0);
        glEnd();

        //kirikanan
        glColor3f(0.87, 0.71, 0.71);
        glBegin(GL_QUADS);
        glVertex3f(-68.0, -78.0, 3.0);
        glVertex3f(-68.0, -48.0, 6.0);
        glVertex3f(-68.0, -48.0, 0.0);
        glVertex3f(-68.0, -78.0, 0.0);
        glEnd();

        glBegin(GL_QUADS);
        glVertex3f(-68.0, -78.0, -18.0);
        glVertex3f(-68.0, -48.0, -21.0);
        glVertex3f(-55.0, -48.0, -21.0);
        glVertex3f(-63.0, -78.0, -18.0);
        glEnd();

        glBegin(GL_QUADS);
        glVertex3f(-82.0, -78.0, -12.0);
        glVertex3f(-90.0, -48.0, -12.0);
        glVertex3f(-77.0, -48.0, -12.0);
        glVertex3f(-77.0, -78.0, -12.0);
        glEnd();

        //kirikanan
        glColor3f(0.77, 0.61, 0.61);
        glBegin(GL_QUADS);
        glVertex3f(-68.0, -78.0, -18.0);
        glVertex3f(-68.0, -48.0, -21.0);
        glVertex3f(-68.0, -48.0, -15.0);
        glVertex3f(-68.0, -78.0, -15.0);
        glEnd();

        //kirikanan
        glBegin(GL_QUADS);
        glVertex3f(-77.0, -78.0, -18.0);
        glVertex3f(-77.0, -48.0, -21.0);
        glVertex3f(-77.0, -48.0, -15.0);
        glVertex3f(-77.0, -78.0, -15.0);
        glEnd();

        //--garistiang--
        glColor3f(0.6, 0.5, 0.4);
        db(-90.0, -77.0, -52.0, -50.0, 6.1);
        kk(-90.0, -52.0, -50.0, 6.1, -3.0);
        db(-89.0, -77.0, -56.0, -54.0, 5.5);
        kk(-89.0, -56.0, -54.0, 5.5, -3.0);
        db(-88.0, -77.0, -60.0, -58.0, 5.3);
        kk(-88.0, -60.0, -58.0, 5.3, -3.0);
        db(-87.0, -77.0, -64.0, -62.0, 4.7);
        kk(-87.0, -64.0, -62.0, 4.7, -3.0);
        db(-86.0, -77.0, -68.0, -66.0, 4.3);
        kk(-86.0, -68.0, -66.0, 4.3, -3.0);
        db(-85.0, -77.0, -72.0, -70.0, 4.1);
        kk(-85.0, -72.0, -70.0, 4.1, -3.0);
        db(-84.0, -77.0, -76.0, -74.0, 3.9);
        kk(-84.0, -76.0, -74.0, 3.9, -3.0);

        db(-76.0, -69.0, -52.0, -50.0, 0.1);
        db(-76.0, -69.0, -56.0, -54.0, 0.1);
        db(-76.0, -69.0, -60.0, -58.0, 0.1);
        db(-76.0, -69.0, -64.0, -62.0, 0.1);
        db(-76.0, -69.0, -68.0, -66.0, 0.1);
        db(-76.0, -69.0, -72.0, -70.0, 0.1);
        db(-76.0, -69.0, -76.0, -74.0, 0.1);

        db(-68.0, -55.0, -52.0, -50.0, 6.1);
        kk(-55.0, -52.0, -50.0, 6.1, -3.0);
        db(-68.0, -56.0, -56.0, -54.0, 5.5);
        kk(-56.0, -56.0, -54.0, 5.5, -3.0);
        db(-68.0, -57.0, -60.0, -58.0, 5.3);
        kk(-57.0, -60.0, -58.0, 5.3, -3.0);
        db(-68.0, -58.0, -64.0, -62.0, 4.7);
        kk(-58.0, -64.0, -62.0, 4.7, -3.0);
        db(-68.0, -59.0, -68.0, -66.0, 4.3);
        kk(-59.0, -68.0, -66.0, 4.3, -3.0);
        db(-68.0, -60.0, -72.0, -70.0, 4.1);
        kk(-60.0, -72.0, -70.0, 4.1, -3.0);
        db(-68.0, -61.0, -76.0, -74.0, 3.9);
        kk(-61.0, -76.0, -74.0, 3.9, -3.0);

        glColor3f(0.6, 0.5, 0.4);
        db(-90.0, -77.0, -52.0, -50.0, -21.1);
        kk(-90.0, -52.0, -50.0, -21.1, -12.0);
        db(-89.0, -77.0, -56.0, -54.0, -20.5);
        kk(-89.0, -56.0, -54.0, -20.5, -12.0);
        db(-88.0, -77.0, -60.0, -58.0, -20.3);
        kk(-88.0, -60.0, -58.0, -20.3, -12.0);
        db(-87.0, -77.0, -64.0, -62.0, -19.7);
        kk(-87.0, -64.0, -62.0, -19.7, -12.0);
        db(-86.0, -77.0, -68.0, -66.0, -19.3);
        kk(-86.0, -68.0, -66.0, -19.3, -12.0);
        db(-85.0, -77.0, -72.0, -70.0, -19.1);
        kk(-85.0, -72.0, -70.0, -19.1, -12.0);
        db(-84.0, -77.0, -76.0, -74.0, -18.9);
        kk(-84.0, -76.0, -74.0, -18.9, -12.0);

        db(-76.0, -69.0, -52.0, -50.0, -15.1);
        db(-76.0, -69.0, -56.0, -54.0, -15.1);
        db(-76.0, -69.0, -60.0, -58.0, -15.1);
        db(-76.0, -69.0, -64.0, -62.0, -15.1);
        db(-76.0, -69.0, -68.0, -66.0, -15.1);
        db(-76.0, -69.0, -72.0, -70.0, -15.1);
        db(-76.0, -69.0, -76.0, -74.0, -15.1);

        db(-68.0, -55.0, -52.0, -50.0, -21.1);
        kk(-55.0, -52.0, -50.0, -21.1, -12.0);
        db(-68.0, -56.0, -56.0, -54.0, -20.5);
        kk(-56.0, -56.0, -54.0, -20.5, -12.0);
        db(-68.0, -57.0, -60.0, -58.0, -19.3);
        kk(-57.0, -60.0, -58.0, -19.3, -12.0);
        db(-68.0, -58.0, -64.0, -62.0, -19.7);
        kk(-58.0, -64.0, -62.0, -19.7, -12.0);
        db(-68.0, -59.0, -68.0, -66.0, -19.3);
        kk(-59.0, -68.0, -66.0, -19.3, -12.0);
        db(-68.0, -60.0, -72.0, -70.0, -19.1);
        kk(-60.0, -72.0, -70.0, -19.1, -12.0);
        db(-68.0, -61.0, -76.0, -74.0, -18.9);
        kk(-61.0, -76.0, -74.0, -18.9, -12.0);

        //kiri
        kk(-80.1, -52.0, -50.0, -4, -11.0);
        kk(-80.1, -56.0, -54.0, -4, -11.0);
        kk(-80.1, -60.0, -58.0, -4, -11.0);
        kk(-80.1, -64.0, -62.0, -4, -11.0);
        kk(-80.1, -68.0, -66.0, -4, -11.0);
        kk(-80.1, -72.0, -70.0, -4, -11.0);
        kk(-80.1, -76.0, -74.0, -4, -11.0);

        //kanan
        kk(-64.9, -52.0, -50.0, -4, -11.0);
        kk(-64.9, -56.0, -54.0, -4, -11.0);
        kk(-64.9, -60.0, -58.0, -4, -11.0);
        kk(-64.9, -64.0, -62.0, -4, -11.0);
        kk(-64.9, -68.0, -66.0, -4, -11.0);
        kk(-64.9, -72.0, -70.0, -4, -11.0);
        kk(-64.9, -76.0, -74.0, -4, -11.0);

        //belakang
        glColor3f(0.87, 0.71, 0.71);
        db(-82.0, -63.0, -78.0, -48.0, -68.0);
        db(-82.0, -63.0, -78.0, -48.0, -92.0);
        kk(-82.0, -78.0, -48.0, -68.0, -92.0);
        kk(-63.0, -78.0, -48.0, -68.0, -92.0);
        
        glColor3f(0.6, 0.5, 0.4);
        db(-82.0, -63.0, -51.0, -48.0, -67.9);
        db(-82.0, -63.0, -78.0, -75.0, -67.9);
        db(-82.0, -79.0, -48.0, -78.0, -67.9);
        db(-65.0, -63.0, -48.0, -78.0, -67.9);

        kk(-82.1, -78.0, -48.0, -67.9, -69.9);
        kk(-82.1, -78.0, -48.0, -89.1, -92.1);
        kk(-82.1, -51.0, -48.0, -69.9, -89.1);
        kk(-82.1, -78.0, -75.0, -69.9, -89.1);

        kk(-62.9, -78.0, -48.0, -67.9, -69.9);
        kk(-62.9, -78.0, -48.0, -89.1, -92.1);
        kk(-62.9, -51.0, -48.0, -69.9, -89.1);
        kk(-62.9, -78.0, -75.0, -69.9, -89.1);

        db(-82.0, -63.0, -51.0, -48.0, -92.1);
        db(-82.0, -63.0, -78.0, -75.0, -92.1);
        db(-82.0, -79.0, -48.0, -78.0, -92.1);
        db(-65.0, -63.0, -48.0, -78.0, -92.1);

    }

void tambahan() {
    //tambahan
    glColor3f(0.87, 0.71, 0.71);

    //DEPAN
    //tiangkiri
    //depankiri
    glPushMatrix();
    glTranslated(145.0, 0.0, 0);

    glBegin(GL_QUADS);
    glVertex3f(-82.0, -78.0, 3.0);
    glVertex3f(-90.0, -48.0, 6.0);
    glVertex3f(-77.0, -48.0, 6.0);
    glVertex3f(-77.0, -78.0, 3.0);
    glEnd();

    glColor3f(0.77, 0.61, 0.61);
    glBegin(GL_QUADS);
    glVertex3f(-82.0, -78.0, 3.0);
    glVertex3f(-90.0, -48.0, 6.0);
    glVertex3f(-90.0, -48.0, -3.0);
    glVertex3f(-82.0, -78.0, -3.0);
    glEnd();

    //kirikanan
    glColor3f(0.77, 0.61, 0.61);
    glBegin(GL_QUADS);
    glVertex3f(-77.0, -78.0, 3.0);
    glVertex3f(-77.0, -48.0, 6.0);
    glVertex3f(-77.0, -48.0, 0.0);
    glVertex3f(-77.0, -78.0, 0.0);
    glEnd();

    //kirikiri
    glColor3f(0.77, 0.61, 0.61);
    glBegin(GL_QUADS);
    glVertex3f(-82.0, -78.0, -12.0);
    glVertex3f(-90.0, -48.0, -12.0);
    glVertex3f(-90.0, -48.0, -21.0);
    glVertex3f(-82.0, -78.0, -18.0);
    glEnd();

    glColor3f(0.87, 0.71, 0.71);
    glBegin(GL_QUADS);
    glVertex3f(-82.0, -78.0, -18.0);
    glVertex3f(-90.0, -48.0, -21.0);
    glVertex3f(-77.0, -48.0, -21.0);
    glVertex3f(-77.0, -78.0, -18.0);
    glEnd();

    //kirinya kanan
    glColor3f(0.77, 0.61, 0.61);
    glBegin(GL_QUADS);
    glVertex3f(-63.0, -78.0, -12.0);
    glVertex3f(-55.0, -48.0, -12.0);
    glVertex3f(-55.0, -48.0, -21.0);
    glVertex3f(-63.0, -78.0, -18.0);
    glEnd();

    glBegin(GL_QUADS);
    glVertex3f(-63.0, -78.0, 3.0);
    glVertex3f(-55.0, -48.0, 6.0);
    glVertex3f(-55.0, -48.0, -3.0);
    glVertex3f(-63.0, -78.0, -3.0);
    glEnd();

    glColor3f(0.77, 0.61, 0.61);
    glBegin(GL_QUADS);
    glVertex3f(-68.0, -78.0, -3.0);
    glVertex3f(-68.0, -48.0, -3.0);
    glVertex3f(-55.0, -48.0, -3.0);
    glVertex3f(-63.0, -78.0, -3.0);
    glEnd();

    glBegin(GL_QUADS);
    glVertex3f(-68.0, -78.0, -12.0);
    glVertex3f(-68.0, -48.0, -12.0);
    glVertex3f(-55.0, -48.0, -12.0);
    glVertex3f(-63.0, -78.0, -12.0);
    glEnd();

    glBegin(GL_QUADS);
    glVertex3f(-82.0, -78.0, -3.0);
    glVertex3f(-90.0, -48.0, -3.0);
    glVertex3f(-77.0, -48.0, -3.0);
    glVertex3f(-77.0, -78.0, -3.0);
    glEnd();

    glColor3f(0.87, 0.71, 0.71);
    glBegin(GL_QUADS);
    glVertex3f(-68.0, -78.0, 3.0);
    glVertex3f(-68.0, -48.0, 6.0);
    glVertex3f(-55.0, -48.0, 6.0);
    glVertex3f(-63.0, -78.0, 3.0);
    glEnd();

    //kirikanan
    glColor3f(0.87, 0.71, 0.71);
    glBegin(GL_QUADS);
    glVertex3f(-68.0, -78.0, 3.0);
    glVertex3f(-68.0, -48.0, 6.0);
    glVertex3f(-68.0, -48.0, 0.0);
    glVertex3f(-68.0, -78.0, 0.0);
    glEnd();

    glBegin(GL_QUADS);
    glVertex3f(-68.0, -78.0, -18.0);
    glVertex3f(-68.0, -48.0, -21.0);
    glVertex3f(-55.0, -48.0, -21.0);
    glVertex3f(-63.0, -78.0, -18.0);
    glEnd();

    glBegin(GL_QUADS);
    glVertex3f(-82.0, -78.0, -12.0);
    glVertex3f(-90.0, -48.0, -12.0);
    glVertex3f(-77.0, -48.0, -12.0);
    glVertex3f(-77.0, -78.0, -12.0);
    glEnd();

    //kirikanan
    glColor3f(0.77, 0.61, 0.61);
    glBegin(GL_QUADS);
    glVertex3f(-68.0, -78.0, -18.0);
    glVertex3f(-68.0, -48.0, -21.0);
    glVertex3f(-68.0, -48.0, -15.0);
    glVertex3f(-68.0, -78.0, -15.0);
    glEnd();

    //kirikanan
    glBegin(GL_QUADS);
    glVertex3f(-77.0, -78.0, -18.0);
    glVertex3f(-77.0, -48.0, -21.0);
    glVertex3f(-77.0, -48.0, -15.0);
    glVertex3f(-77.0, -78.0, -15.0);
    glEnd();

    //--garistiang--
    glColor3f(0.6, 0.5, 0.4);
    db(-90.0, -77.0, -52.0, -50.0, 6.1);
    kk(-90.0, -52.0, -50.0, 6.1, -3.0);
    db(-89.0, -77.0, -56.0, -54.0, 5.5);
    kk(-89.0, -56.0, -54.0, 5.5, -3.0);
    db(-88.0, -77.0, -60.0, -58.0, 5.3);
    kk(-88.0, -60.0, -58.0, 5.3, -3.0);
    db(-87.0, -77.0, -64.0, -62.0, 4.7);
    kk(-87.0, -64.0, -62.0, 4.7, -3.0);
    db(-86.0, -77.0, -68.0, -66.0, 4.3);
    kk(-86.0, -68.0, -66.0, 4.3, -3.0);
    db(-85.0, -77.0, -72.0, -70.0, 4.1);
    kk(-85.0, -72.0, -70.0, 4.1, -3.0);
    db(-84.0, -77.0, -76.0, -74.0, 3.9);
    kk(-84.0, -76.0, -74.0, 3.9, -3.0);

    db(-76.0, -69.0, -52.0, -50.0, 0.1);
    db(-76.0, -69.0, -56.0, -54.0, 0.1);
    db(-76.0, -69.0, -60.0, -58.0, 0.1);
    db(-76.0, -69.0, -64.0, -62.0, 0.1);
    db(-76.0, -69.0, -68.0, -66.0, 0.1);
    db(-76.0, -69.0, -72.0, -70.0, 0.1);
    db(-76.0, -69.0, -76.0, -74.0, 0.1);

    db(-68.0, -55.0, -52.0, -50.0, 6.1);
    kk(-55.0, -52.0, -50.0, 6.1, -3.0);
    db(-68.0, -56.0, -56.0, -54.0, 5.5);
    kk(-56.0, -56.0, -54.0, 5.5, -3.0);
    db(-68.0, -57.0, -60.0, -58.0, 5.3);
    kk(-57.0, -60.0, -58.0, 5.3, -3.0);
    db(-68.0, -58.0, -64.0, -62.0, 4.7);
    kk(-58.0, -64.0, -62.0, 4.7, -3.0);
    db(-68.0, -59.0, -68.0, -66.0, 4.3);
    kk(-59.0, -68.0, -66.0, 4.3, -3.0);
    db(-68.0, -60.0, -72.0, -70.0, 4.1);
    kk(-60.0, -72.0, -70.0, 4.1, -3.0);
    db(-68.0, -61.0, -76.0, -74.0, 3.9);
    kk(-61.0, -76.0, -74.0, 3.9, -3.0);

    glColor3f(0.6, 0.5, 0.4);
    db(-90.0, -77.0, -52.0, -50.0, -21.1);
    kk(-90.0, -52.0, -50.0, -21.1, -12.0);
    db(-89.0, -77.0, -56.0, -54.0, -20.5);
    kk(-89.0, -56.0, -54.0, -20.5, -12.0);
    db(-88.0, -77.0, -60.0, -58.0, -20.3);
    kk(-88.0, -60.0, -58.0, -20.3, -12.0);
    db(-87.0, -77.0, -64.0, -62.0, -19.7);
    kk(-87.0, -64.0, -62.0, -19.7, -12.0);
    db(-86.0, -77.0, -68.0, -66.0, -19.3);
    kk(-86.0, -68.0, -66.0, -19.3, -12.0);
    db(-85.0, -77.0, -72.0, -70.0, -19.1);
    kk(-85.0, -72.0, -70.0, -19.1, -12.0);
    db(-84.0, -77.0, -76.0, -74.0, -18.9);
    kk(-84.0, -76.0, -74.0, -18.9, -12.0);

    db(-76.0, -69.0, -52.0, -50.0, -15.1);
    db(-76.0, -69.0, -56.0, -54.0, -15.1);
    db(-76.0, -69.0, -60.0, -58.0, -15.1);
    db(-76.0, -69.0, -64.0, -62.0, -15.1);
    db(-76.0, -69.0, -68.0, -66.0, -15.1);
    db(-76.0, -69.0, -72.0, -70.0, -15.1);
    db(-76.0, -69.0, -76.0, -74.0, -15.1);

    db(-68.0, -55.0, -52.0, -50.0, -21.1);
    kk(-55.0, -52.0, -50.0, -21.1, -12.0);
    db(-68.0, -56.0, -56.0, -54.0, -20.5);
    kk(-56.0, -56.0, -54.0, -20.5, -12.0);
    db(-68.0, -57.0, -60.0, -58.0, -19.3);
    kk(-57.0, -60.0, -58.0, -19.3, -12.0);
    db(-68.0, -58.0, -64.0, -62.0, -19.7);
    kk(-58.0, -64.0, -62.0, -19.7, -12.0);
    db(-68.0, -59.0, -68.0, -66.0, -19.3);
    kk(-59.0, -68.0, -66.0, -19.3, -12.0);
    db(-68.0, -60.0, -72.0, -70.0, -19.1);
    kk(-60.0, -72.0, -70.0, -19.1, -12.0);
    db(-68.0, -61.0, -76.0, -74.0, -18.9);
    kk(-61.0, -76.0, -74.0, -18.9, -12.0);

    //kiri
    kk(-80.1, -52.0, -50.0, -4, -11.0);
    kk(-80.1, -56.0, -54.0, -4, -11.0);
    kk(-80.1, -60.0, -58.0, -4, -11.0);
    kk(-80.1, -64.0, -62.0, -4, -11.0);
    kk(-80.1, -68.0, -66.0, -4, -11.0);
    kk(-80.1, -72.0, -70.0, -4, -11.0);
    kk(-80.1, -76.0, -74.0, -4, -11.0);

    //kanan
    kk(-64.9, -52.0, -50.0, -4, -11.0);
    kk(-64.9, -56.0, -54.0, -4, -11.0);
    kk(-64.9, -60.0, -58.0, -4, -11.0);
    kk(-64.9, -64.0, -62.0, -4, -11.0);
    kk(-64.9, -68.0, -66.0, -4, -11.0);
    kk(-64.9, -72.0, -70.0, -4, -11.0);
    kk(-64.9, -76.0, -74.0, -4, -11.0);

    //belakang
    glColor3f(0.87, 0.71, 0.71);
    db(-82.0, -63.0, -78.0, -48.0, -68.0);
    db(-82.0, -63.0, -78.0, -48.0, -92.0);
    kk(-82.0, -78.0, -48.0, -68.0, -92.0);
    kk(-63.0, -78.0, -48.0, -68.0, -92.0);

    glColor3f(0.6, 0.5, 0.4);
    db(-82.0, -63.0, -51.0, -48.0, -67.9);
    db(-82.0, -63.0, -78.0, -75.0, -67.9);
    db(-82.0, -79.0, -48.0, -78.0, -67.9);
    db(-65.0, -63.0, -48.0, -78.0, -67.9);

    kk(-82.1, -78.0, -48.0, -67.9, -69.9);
    kk(-82.1, -78.0, -48.0, -89.1, -92.1);
    kk(-82.1, -51.0, -48.0, -69.9, -89.1);
    kk(-82.1, -78.0, -75.0, -69.9, -89.1);

    kk(-62.9, -78.0, -48.0, -67.9, -69.9);
    kk(-62.9, -78.0, -48.0, -89.1, -92.1);
    kk(-62.9, -51.0, -48.0, -69.9, -89.1);
    kk(-62.9, -78.0, -75.0, -69.9, -89.1);

    db(-82.0, -63.0, -51.0, -48.0, -92.1);
    db(-82.0, -63.0, -78.0, -75.0, -92.1);
    db(-82.0, -79.0, -48.0, -78.0, -92.1);
    db(-65.0, -63.0, -48.0, -78.0, -92.1);

    glPopMatrix();
}

void atapkecil() {
    glColor3f(0.54, 0.57, 0.54);
    kk2(-145.0, -170.0, -90.0, -40.0, -30.0, -90.0);
    kk2(-195.0, -170.0, -90.0, -40.0, -30.0, -90.0);
    kk2(145.0, 170.0, -90.0, -40.0, -30.0, -90.0);
    kk2(195.0, 170.0, -90.0, -40.0, -30.0, -90.0);

    //tiangnya
    glColor3f(0.87, 0.71, 0.71);
    //paling kiri 
    db2(-150.0, -150.0, -155.0, -155.0, -165.0, -90.0, -40.0);
    kk(-150.0, -165.0, -90.0, -30.0, -40.0);
    kk(-155.0, -165.0, -90.0, -30.0, -40.0);
    db2(-150.0, -150.0, -155.0, -155.0, -165.0, -90.0, -30.0);

    db2(-150.0, -150.0, -155.0, -155.0, -150.0, -90.0, -90.0);
    kk(-150.0, -150.0, -90.0, -80.0, -90.0);
    kk(-155.0, -150.0, -90.0, -80.0, -90.0);
    db2(-150.0, -150.0, -155.0, -155.0, -150.0, -90.0, -80.0);

    db2(-190.0, -190.0, -185.0, -185.0, -165.0, -90.0, -30.0);
    kk(-190.0, -165.0, -90.0, -30.0, -40.0);
    kk(-185.0, -165.0, -90.0, -30.0, -40.0);
    db2(-190.0, -190.0, -185.0, -185.0, -165.0, -90.0, -30.0);

    db2(-190.0, -190.0, -185.0, -185.0, -150.0, -90.0, -90.0);
    kk(-190.0, -150.0, -90.0, -80.0, -90.0);
    kk(-185.0, -150.0, -90.0, -80.0, -90.0);
    db2(-190.0, -190.0, -185.0, -185.0, -150.0, -90.0, -80.0);

    //paling kanan 
    db2(150.0, 150.0, 155.0, 155.0, -165.0, -90.0, -40.0);
    kk(150.0, -165.0, -90.0, -30.0, -40.0);
    kk(155.0, -165.0, -90.0, -30.0, -40.0);
    db2(150.0, 150.0, 155.0, 155.0, -165.0, -90.0, -30.0);

    db2(150.0, 150.0, 155.0, 155.0, -150.0, -90.0, -90.0);
    kk(150.0, -150.0, -90.0, -80.0, -90.0);
    kk(155.0, -150.0, -90.0, -80.0, -90.0);
    db2(150.0, 150.0, 155.0, 155.0, -150.0, -90.0, -80.0);

    db2(190.0, 190.0, 185.0, 185.0, -165.0, -90.0, -40.0);
    kk(190.0, -165.0, -90.0, -30.0, -40.0);
    kk(185.0, -165.0, -90.0, -30.0, -40.0);
    db2(190.0, 190.0, 185.0, 185.0, -165.0, -90.0, -30.0);

    db2(190.0, 190.0, 185.0, 185.0, -150.0, -90.0, -90.0);
    kk(190.0, -150.0, -90.0, -80.0, -90.0);
    kk(185.0, -150.0, -90.0, -80.0, -90.0);
    db2(190.0, 190.0, 185.0, 185.0, -150.0, -90.0, -80.0);

    //segitiga kiri
    glBegin(GL_QUADS);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(-195, -90, -33);
    glVertex3f(-170, -40, -33);
    glVertex3f(-145, -90, -33);
    glVertex3f(-145, -90, -33);
    glEnd();

    glBegin(GL_QUADS);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(-195, -90, -87);
    glVertex3f(-170, -40, -87);
    glVertex3f(-145, -90, -87);
    glVertex3f(-145, -90, -87);
    glEnd();

    //segitiga kanan
    glBegin(GL_QUADS);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(195, -90, -33);
    glVertex3f(170, -40, -33);
    glVertex3f(145, -90, -33);
    glVertex3f(145, -90, -33);
    glEnd();

    glBegin(GL_QUADS);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(195, -90, -87);
    glVertex3f(170, -40, -87);
    glVertex3f(145, -90, -87);
    glVertex3f(145, -90, -87);
    glEnd();
    /* kk2(-100.0, -120.0, -60.0, -40.0, -10.0, -90.0);
    kk2(-140.0, -120.0, -60.0, -40.0, -10.0, -90.0);*/
}

void bangunan() {
    //alas
    glColor3f(0.55, 0.46, 0.37);
    ab(-250.0, 250.0, -165.1, 30.0, -450.0);

    //bangunan
    glColor3f(0.85, 0.76, 0.67);
    //depan
    db(-220.0, 220.0, -90.0, 150.0, -100.0);
    glColor3f(0.75, 0.66, 0.57);
    //belakang
    db(-220.0, 220.0, -165.0, 150.0, -400.0);
    //bawah2
    ab(-220.0, 220.0, -90.0, -100.0, -150.0);
    //atas
    ab(-220.0, 220.0, 150.0, -100.0, -400.0);

    glColor3f(0.85, 0.76, 0.67);
    //kiri
    kk(-220.0, -165.0, 150.0, -100.0, -400.0);
    //kanan
    kk(220.0, -165.0, 150.0, -100.0, -400.0);

    //tiangkeciltengah
    glColor3f(0.75, 0.66, 0.57);
    db(-5.0, 5.0, -165.0, -90.0, -102.0);
    db(-5.0, 5.0, -165.0, -90.0, -112.0);
    kk(-5.0, -165.0, -90.0, -102.0, -112.0);
    kk(5.0, -165.0, -90.0, -102.0, -112.0);

    //sekat"
    db(-150.0, -148.0, -165.0, -90.0, -102.0);
    kk(-150.0, -165.0, -90.0, -102.0, -150.0);
    kk(-148.0, -165.0, -90.0, -102.0, -150.0);

    db(-80.0, -78.0, -165.0, -90.0, -102.0);
    kk(-80.0, -165.0, -90.0, -102.0, -150.0);
    kk(-78.0, -165.0, -90.0, -102.0, -150.0);

    db(150.0, 148.0, -165.0, -90.0, -102.0);
    kk(150.0, -165.0, -90.0, -102.0, -150.0);
    kk(148.0, -165.0, -90.0, -102.0, -150.0);

    db(80.0, 78.0, -165.0, -90.0, -102.0);
    kk(80.0, -165.0, -90.0, -102.0, -150.0);
    kk(78.0, -165.0, -90.0, -102.0, -150.0);

    //garis-garis tembok
    glColor3f(0.7, 0.57, 0.66);
    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-55.0, -90.0, -99.5);
    glVertex3f(-55.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(55.0, -90.0, -99.5);
    glVertex3f(55.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(165.0, -90.0, -99.5);
    glVertex3f(165.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-165.0, -90.0, -99.5);
    glVertex3f(-165.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-110.0, -90.0, -99.5);
    glVertex3f(-110.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(110.0, -90.0, -99.5);
    glVertex3f(110.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(0.0, -90.0, -99.5);
    glVertex3f(0.0, 80.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(200.0, -90.0, -99.5);
    glVertex3f(200.0, 80.0, -99.5);
    glEnd();

    //horizontal
    glLineWidth(15.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, -90.0, -99.5);
    glVertex3f(220.0, -90.0, -99.5);
    glEnd();

    glLineWidth(8.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, -30.0, -99.5);
    glVertex3f(220.0, -30.0, -99.5);
    glEnd();

    glLineWidth(8.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, 30.0, -99.5);
    glVertex3f(220.0, 30.0, -99.5);
    glEnd();

    glLineWidth(8.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, 80.0, -99.5);
    glVertex3f(220.0, 80.0, -99.5);
    glEnd();

    //jendela kanan pinggir paling bawah
    glColor3f(0.2, 0.2, 0.2);
    //1
    db(165.0, 200.0, -88.0, -32.0, -99.6);
    //2
    db(165.0, 200.0, -28.0, 26.0, -99.6);
    //2
    db(165.0, 200.0, 28.0, 78.0, -99.6);

    //jendela horizontal
    glLineWidth(10.0);
    glBegin(GL_LINES);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(-220.0, 110.0, -99.5);
    glVertex3f(220.0, 110.0, -99.5);
    glEnd();

    glColor3f(0.6, 0.5, 0.4);
    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, 101.5, -99.5);
    glVertex3f(220.0, 101.5, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, 116.5, -99.5);
    glVertex3f(220.0, 116.5, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glColor3f(0.333, 0.41, 0.18);
    glVertex3f(-220.0, 87.0, -99.5);
    glVertex3f(220.0, 87.0, -99.5);
    glEnd();

    //glColor3f(0.8, 0.67, 0.76);
    glColor3f(0.6, 0.5, 0.4);
    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, 130.0, -99.5);
    glVertex3f(220.0, 130.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-220.0, 150.0, -99.5);
    glVertex3f(220.0, 150.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-55.0, 135.0, -99.5);
    glVertex3f(-55.0, 150.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(55.0, 135.0, -99.5);
    glVertex3f(55.0, 150.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(165.0, 135.0, -99.5);
    glVertex3f(165.0, 150.0, -99.5);
    glEnd();

    glLineWidth(5.0);
    glBegin(GL_LINES);
    glVertex3f(-165.0, 135.0, -99.5);
    glVertex3f(-165.0, 150.0, -99.5);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(195.0, 100.0, -88.0);
    glVertex3f(195.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(180.0, 100.0, -88.0);
    glVertex3f(180.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(165.0, 100.0, -88.0);
    glVertex3f(165.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(150.0, 100.0, -88.0);
    glVertex3f(150.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(135.0, 100.0, -88.0);
    glVertex3f(135.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(120.0, 100.0, -88.0);
    glVertex3f(120.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(105.0, 100.0, -88.0);
    glVertex3f(105.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(90.0, 100.0, -88.0);
    glVertex3f(90.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(75.0, 100.0, -88.0);
    glVertex3f(75.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(60.0, 100.0, -88.0);
    glVertex3f(60.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(45.0, 100.0, -88.0);
    glVertex3f(45.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(25.0, 100.0, -88.0);
    glVertex3f(25.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(10.0, 100.0, -88.0);
    glVertex3f(10.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-5.0, 100.0, -88.0);
    glVertex3f(-5.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-20.0, 100.0, -88.0);
    glVertex3f(-20.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-35.0, 100.0, -88.0);
    glVertex3f(-35.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-55.0, 100.0, -88.0);
    glVertex3f(-55.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-75.0, 100.0, -88.0);
    glVertex3f(-75.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-95.0, 100.0, -88.0);
    glVertex3f(-95.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-110.0, 100.0, -88.0);
    glVertex3f(-110.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-125.0, 100.0, -88.0);
    glVertex3f(-125.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-145.0, 100.0, -88.0);
    glVertex3f(-145.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-160.0, 100.0, -88.0);
    glVertex3f(-160.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-175.0, 100.0, -88.0);
    glVertex3f(-175.0, 115.0, -88.0);
    glEnd();

    glLineWidth(3.0);
    glBegin(GL_LINES);
    glVertex3f(-190.0, 100.0, -88.0);
    glVertex3f(-190.0, 115.0, -88.0);
    glEnd();

    //TANGGA SAMPING
    glColor3f(0.4, 0.0, 0.0);
    ab(-220.0, 220.0, -150.0, -80.0, -100.0);
    glColor3f(0.5, 0.0, 0.0);
    db(-220.0, 220.0, -165.0, -150.0, -80.0);

    glColor3f(1.0, 0.0, 0.0);
    ab(-220.0, 220.0, -155.1, -75.0, -80.0);
    glColor3f(0.5, 0.0, 0.0);
    db(-220.0, 220.0, -165.0, -155.1, -75.0);

    glColor3f(1.0, 0.0, 0.0);
    ab(-220.0, 220.0, -160.0, -70.0, -75.0);
    glColor3f(0.5, 0.0, 0.0);
    db(-220.0, 220.0, -165.0, -160.0, -70.0);

    atapkecil();
    //atas
    //ab(-145.0, 50.0, -5.0, 0.0, -135.0);
    //bawah
    //ab(-180.0, 180.0, -165.0, -50.0, -190.0);
}

void bangunan_depan() {
    //BANGUNAN DEPAN
    glColor3f(0.53, 0.46, 0.47);
    ab(-100.0, 100.0, -10.0, 26.0, -100.0);
    ab(-90.0, 90.0, -35.0, 20.0, -100.0);

    glColor3f(0.87, 0.71, 0.71);
    db(-90.0, 90.0, -35.0, -30.0, 20.0);
    kk(-90.0, -35.0, -30.0, 20.0, -100.0);
    kk(90.0, -35.0, -30.0, 20.0, -100.0);
    ab(-90.0, 90.0, -35.0, 20.0, -100.0);

    glColor3f(0.97, 0.81, 0.81);
    db(-92.0, 92.0, -30.0, -23.0, 22.0);
    kk(-92.0, -30.0, -23.0, 22.0, -100.0);
    kk(92.0, -30.0, -23.0, 22.0, -100.0);
    ab(-92.0, 92.0, -30.0, 22.0, -100.0);

    glColor3f(0.9, 0.8, 0.8);
    db(-97.0, 97.0, -23.0, -13.0, 24.0);
    kk(-97.0, -23.0, -13.0, 24.0, -100.0);
    kk(97.0, -23.0, -13.0, 24.0, -100.0);
    ab(-97.0, 97.0, -23.0, 24.0, -100.0);

    glColor3f(0.87, 0.71, 0.71);
    db(-98.0, 98.0, -21.0, -15.0, 25.0);
    kk(-98.0, -21.0, -15.0, 25.0, -100.0);
    kk(98.0, -21.0, -15.0, 25.0, -100.0);

    glColor3f(0.87, 0.71, 0.71);
    db(-100.0, 100.0, -13.0, -10.0, 26.0);
    kk(-100.0, -13.0, -10.0, 26.0, -100.0);
    kk(100.0, -13.0, -10.0, 26.0, -100.0);
    ab(-100.0, 100.0, -13.0, 26.0, -100.0);

    glColor3f(0.87, 0.71, 0.71);
    db(-75.0, 75.0, -45.0, -35.0, -15.0);
    db(-75.0, 75.0, -45.0, -35.0, -98.0);
    kk(-75.0, -45.0, -35.0, -15.0, -98.0);
    kk(75.0, -45.0, -35.0, -15.0, -98.0);
    //ab(-60.0, 60.0, -35.0, 20.0, -100.0);

    //-garis" putih-
    glColor3f(1.0, 1.0, 1.0);
    db(-75.0, 75.0, -47.0, -45.0, -15.0);
    db(-75.0, 75.0, -60.0, -58.0, -15.0);

    db(-60.0, -59.0, -58.0, -47.0, -15.0);
    db(-50.0, -49.0, -58.0, -47.0, -15.0);
    db(-40.0, -39.0, -58.0, -47.0, -15.0);
    db(-30.0, -29.0, -58.0, -47.0, -15.0);
    db(-20.0, -19.0, -58.0, -47.0, -15.0);
    db(-10.0, -9.0, -58.0, -47.0, -15.0);
    db(0.0, 1.0, -58.0, -47.0, -15.0);
    db(10.0, 11.0, -58.0, -47.0, -15.0);
    db(20.0, 21.0, -58.0, -47.0, -15.0);
    db(30.0, 31.0, -58.0, -47.0, -15.0);
    db(40.0, 41.0, -58.0, -47.0, -15.0);
    db(50.0, 51.0, -58.0, -47.0, -15.0);
    db(60.0, 61.0, -58.0, -47.0, -15.0);

    glColor3f(0.0, 0.0, 0.0);

    db(-30.0, 30.0, -75.0, -60.0, -99.0);

    //tangga
    glColor3f(0.8, 0.8, 0.8);
    ab(-70.0, 70.0, -155.0, 10.0, -100.0);

    glColor3f(0.2, 0.2, 0.2);
    db(-70.0, 70.0, -160.0, -155.0, 10.0);
    kk(-70.0, -160.0, -155.0, 10.0, -100.0);
    kk(70.0, -160.0, -155.0, 10.0, -100.0);

    glColor3f(0.8, 0.8, 0.8);
    ab(-75.0, 75.0, -160.0, 15.0, -100.0);

    glColor3f(0.2, 0.2, 0.2);
    db(-75.0, 75.0, -165.0, -160.0, 15.0);
    kk(-75.0, -160.0, -165.0, 15.0, -100.0);
    kk(75.0, -160.0, -165.0, 15.0, -100.0);

    //tiang
    glColor3f(0.87, 0.71, 0.71);
    db2(65.0, 65.0, 80.0, 80.0, -160.0, -35.0, 0.0);
    kk(65.0, -160.0, -35.0, 0.0, -15.0);
    kk(80.0, -160.0, -35.0, 0.0, -15.0);
    db2(65.0, 65.0, 80.0, 80.0, -160.0, -35.0, -15.0);

    db2(65.0, 65.0, 80.0, 80.0, -160.0, -35.0, -90.0);
    kk(65.0, -160.0, -35.0, -90.0, -70.0);
    kk(80.0, -160.0, -35.0, -90.0, -70.0);
    db2(65.0, 65.0, 80.0, 80.0, -160.0, -35.0, -70.0);

    db2(-80.0, -80.0, -65.0, -65.0, -160.0, -35.0, 0.0);
    kk(-80.0, -160.0, -35.0, 0.0, -15.0);
    kk(-65.0, -160.0, -35.0, 0.0, -15.0);
    db2(-80.0, -80.0, -65.0, -65.0, -160.0, -35.0, -15.0);

    db2(-80.0, -80.0, -65.0, -65.0, -160.0, -35.0, -90.0);
    kk(-80.0, -160.0, -35.0, -90.0, -70.0);
    kk(-65.0, -160.0, -35.0, -90.0, -70.0);
    db2(-80.0, -80.0, -65.0, -65.0, -160.0, -35.0, -70.0);

    //tiang
    glLineWidth(7.5f);
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(65.0, -35.0, 0.1);
    glVertex3f(65.0, -160.0, 0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(80.0, -35.0, 0.1);
    glVertex3f(80.0, -160.0, 0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(65.0, -35.0, -0.1);
    glVertex3f(65.0, -160.0, -0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(80.0, -35.0, -0.1);
    glVertex3f(80.0, -160.0, -0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-80.0, -35.0, 0.1);
    glVertex3f(-80.0, -160.0, 0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-65.0, -35.0, 0.1);
    glVertex3f(-65.0, -160.0, 0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-80.0, -35.0, -69.9);
    glVertex3f(-80.0, -160.0, -69.9);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-65.0, -35.0, -69.9);
    glVertex3f(-65.0, -160.0, -69.9);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(65.0, -35.0, -69.9);
    glVertex3f(65.0, -160.0, -69.9);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(80.0, -35.0, -69.9);
    glVertex3f(80.0, -160.0, -69.9);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(65.0, -35.0, -90.1);
    glVertex3f(65.0, -160.0, -90.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(80.0, -35.0, -90.1);
    glVertex3f(80.0, -160.0, -90.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-80.0, -35.0, -90.1);
    glVertex3f(-80.0, -160.0, -90.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-80.0, -35.0, -0.1);
    glVertex3f(-80.0, -160.0, -0.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-65.0, -35.0, -90.1);
    glVertex3f(-65.0, -160.0, -90.1);
    glEnd();

    //tiang
    glColor3f(0.6, 0.5, 0.4);
    glBegin(GL_LINES);
    glVertex3f(-65.0, -35.0, -0.1);
    glVertex3f(-65.0, -160.0, -0.1);
    glEnd();

    //-atap-
    glColor3f(0.54, 0.57, 0.54);
    ab(-60.0, -20.0, 5.0, -10.0, -90.0);
    ab(20.0, 60.0, 5.0, -10.0, -90.0);

    db2(-61.0, -60.0, -19.0, -20.0, 2.0, 5.0, -10.0);
    db2(61.0, 60.0, 19.0, 20.0, 2.0, 5.0, -10.0);

    kk(-60.0, 2.0, 5.0, -10.0, -90.0);
    kk(60.0, 2.0, 5.0, -10.0, -90.0);

    kk2(-19.0, 0.0, 2.0, 37.0, -10.0, -90.0);
    kk2(19.0, 0.0, 2.0, 37.0, -10.0, -90.0);

    //-atap2-
    kk2(-20.0, 0.0, 5.0, 40.0, -10.0, -90.0);
    kk2(20.0, 0.0, 5.0, 40.0, -10.0, -90.0);

    glBegin(GL_QUADS);
    glVertex3f(-20.0, 5.0, -10.0);
    glVertex3f(0.0, 40.0, -10.0);
    glVertex3f(0.0, 37.0, -10.0);
    glVertex3f(-19.0, 2.0, -10.0);
    glEnd();

    glBegin(GL_QUADS);
    glVertex3f(20.0, 5.0, -10.0);
    glVertex3f(0.0, 40.0, -10.0);
    glVertex3f(0.0, 37.0, -10.0);
    glVertex3f(19.0, 2.0, -10.0);
    glEnd();

    //kacadepan
    glColor3f(0.2, 0.2, 0.2);
    db2(-54.0, -61.0, 53.0, 61.0, -10.0, 2.0, -13.0);
    s3(-20.0, 0.0, 20.0, 2.0, 37.0, -13.0);

    //kacabelakang
    glColor3f(0.2, 0.2, 0.2);
    db2(-54.0, -61.0, 53.0, 61.0, -10.0, 2.0, -88.0);
    s3(-20.0, 0.0, 20.0, 2.0, 37.0, -88.0);

    //--segitiga--
    glColor3f(1.0, 1.0, 1.0);
    db2(-54.0, -61.0, -53.0, -60.0, -10.0, 2.0, -12.8);
    db2(-54.0, -47.0, -53.0, -46.0, -10.0, 2.0, -12.8);

    db2(-40.0, -47.0, -39.0, -46.0, -10.0, 2.0, -12.8);
    db2(-40.0, -33.0, -39.0, -32.0, -10.0, 2.0, -12.8);

    db2(-26.0, -33.0, -25.0, -32.0, -10.0, 2.0, -12.8);
    db2(-26.0, -20.0, -25.0, -19.0, -10.0, 2.0, -12.8);

    db2(-13.0, -20.0, -12.0, -19.0, -10.0, 2.0, -12.8);
    db2(-13.0, -6.0, -12.0, -5.0, -10.0, 2.0, -12.8);

    db2(0.0, -6.0, 1.0, -5.0, -10.0, 2.0, -12.8);
    db2(0.0, 5.0, 1.0, 6.0, -10.0, 2.0, -12.8);

    db2(13.0, 20.0, 12.0, 19.0, -10.0, 2.0, -12.8);
    db2(13.0, 6.0, 12.0, 5.0, -10.0, 2.0, -12.8);

    db2(54.0, 61.0, 53.0, 60.0, -10.0, 2.0, -12.8);
    db2(54.0, 47.0, 53.0, 46.0, -10.0, 2.0, -12.8);

    db2(40.0, 47.0, 39.0, 46.0, -10.0, 2.0, -12.8);
    db2(40.0, 33.0, 39.0, 32.0, -10.0, 2.0, -12.8);

    db2(26.0, 33.0, 25.0, 32.0, -10.0, 2.0, -12.8);
    db2(26.0, 20.0, 25.0, 19.0, -10.0, 2.0, -12.8);

    db(-61.0, 61.0, 1.0, 2.0, -12.0);

    db2(6.0, 13.0, 5.0, 12.0, 2.0, 14.0, -12.8);
    db2(6.0, 1.0, 5.0, 0.0, 2.0, 14.0, -12.8);

    db2(-5.0, 1.0, -6.0, 0.0, 2.0, 14.0, -12.8);
    db2(-5.0, -12.0, -6.0, -13.0, 2.0, 14.0, -12.8);

    db(-13.0, 13.0, 13.0, 14.0, -12.0);
    
    db2(0.0, -6.0, 1.0, -5.0, 14.0, 26.0, -12.8);
    db2(0.0, 5.0, 1.0, 6.0, 14.0, 26.0, -12.8);

    db(-6.0, 6.0, 25.0, 26.0, -12.0);
    
    //tambahan
    tambahan();
    tambahan2();
}

void mobil() {
    //perintah animasi
    glPushMatrix();
    glTranslatef(gerak, 0, 0);

    //tengah
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(23.5, -155.0, 55.0);
    glVertex3f(23.5, -145.5, 55.0);
    glVertex3f(70.0, -145.5, 55.0);
    glVertex3f(70.0, -155.0, 55.0);
    glEnd();
    //tengah atas
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(28.5, -145.5, 55.0);
    glVertex3f(31.5, -130.5, 55.0);
    glVertex3f(67.0, -130.5, 55.0);
    glVertex3f(70.0, -145.5, 55.0);
    glEnd();
    //depan
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(70.0, -155.0, 55.0);
    glVertex3f(70.0, -145.5, 55.0);
    glVertex3f(81.0, -145.5, 55.0);
    glVertex3f(81.0, -155.0, 55.0);
    glEnd();

    //tengah
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(23.5, -155.0, 35.0);
    glVertex3f(23.5, -145.5, 35.0);
    glVertex3f(70.0, -145.5, 35.0);
    glVertex3f(70.0, -155.0, 35.0);
    glEnd();
    //tengah atas
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(28.5, -145.5, 35.0);
    glVertex3f(31.5, -130.5, 35.0);
    glVertex3f(67.0, -130.5, 35.0);
    glVertex3f(70.0, -145.5, 35.0);
    glEnd();
    //depan
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(70.0, -155.0, 35.0);
    glVertex3f(70.0, -145.5, 35.0);
    glVertex3f(81.0, -145.5, 35.0);
    glVertex3f(81.0, -155.0, 35.0);
    glEnd();

    //atas
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(31, -130.5, 35.0);
    glVertex3f(67, -130.5, 35.0); //belakang
    glVertex3f(67, -130.5, 55.0); //depan kanan
    glVertex3f(31, -130.5, 55.0); //depan kiri
    glEnd();
    //depan
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(67.0, -130.0, 55.0);
    glVertex3f(70.0, -145.0, 55.0);
    glVertex3f(70.0, -145.0, 35.0);
    glVertex3f(67.0, -130.0, 35.0);
    glEnd();
    //kaca-depan
    glBegin(GL_QUADS);
    glColor3f(0, 0, 0);
    glVertex3f(67.1, -130.0, 53.0);
    glVertex3f(70.1, -145.0, 53.0);
    glVertex3f(70.1, -145.0, 38.0);
    glVertex3f(67.1, -130.0, 38.0);
    glEnd();
    //belakang
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(31.0, -130.0, 55.0);
    glVertex3f(28.0, -145.0, 55.0);
    glVertex3f(28.0, -145.0, 35.0);
    glVertex3f(31.0, -130.0, 35.0);
    glEnd();
    //tutup cap depan
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(67, -145.5, 55.0);
    glVertex3f(80, -145.5, 55.0); //belakang
    glVertex3f(80, -145.5, 35.0); //depan kanan
    glVertex3f(67, -145.5, 35.0); //depan kiri
    glEnd();
    //tutup cap belakang
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(23, -145.5, 55.0);
    glVertex3f(28, -145.5, 55.0); //belakang
    glVertex3f(28, -145.5, 35.0); //depan kanan
    glVertex3f(23, -145.5, 35.0); //depan kiri
    glEnd();
    //tempat lampu
    //depan
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(81.0, -145.0, 55.0);
    glVertex3f(81.0, -155.0, 55.0);
    glVertex3f(81.0, -155.0, 35.0);
    glVertex3f(81.0, -145.0, 35.0);
    glEnd();
    //belakang
    glBegin(GL_QUADS);
    glColor3f(0, 0, 1);
    glVertex3f(23.0, -145.0, 55.0);
    glVertex3f(23.0, -155.0, 55.0);
    glVertex3f(23.0, -155.0, 35.0);
    glVertex3f(23.0, -145.0, 35.0);
    glEnd();
    //jendela 1
    glBegin(GL_QUADS);
    glColor3f(0, 0, 0);
    glVertex3f(50.5, -145.5, 55.1);
    glVertex3f(50.5, -130.5, 55.1);
    glVertex3f(62.0, -130.5, 55.1);
    glVertex3f(66.0, -145.5, 55.1);
    glEnd();
    //jendela 1
    glBegin(GL_QUADS);
    glColor3f(0, 0, 0);
    glVertex3f(50.5, -145.5, 35.1);
    glVertex3f(50.5, -130.5, 35.1);
    glVertex3f(62.0, -130.5, 35.1);
    glVertex3f(66.0, -145.5, 35.1);
    glEnd();

    //jendela 1
    glBegin(GL_QUADS);
    glColor3f(0, 0, 0);
    glVertex3f(32.0, -145.5, 55.1);
    glVertex3f(34.0, -130.5, 55.1);
    glVertex3f(48.5, -130.5, 55.1);
    glVertex3f(48.5, -145.5, 55.1);
    glEnd();
    //jendela 1
    glBegin(GL_QUADS);
    glColor3f(0, 0, 0);
    glVertex3f(32.0, -145.5, 35.1);
    glVertex3f(34.0, -130.5, 35.1);
    glVertex3f(48.5, -130.5, 35.1);
    glVertex3f(48.5, -145.5, 35.1);
    glEnd();

    //ban depan1
    glColor3f(1, 1, 0);
    glBegin(GL_POLYGON);

    radius = 400;
    jumlah_titik = 60;
    x_tengah = 3500;
    y_tengah = -15500;

    for (i = 0; i <= 360; i++)
    {
        float sudut = i * (2 * PI / jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x / 100, y / 100, 55.1);
    }
    glEnd();
    glFlush();

    //ban depan2
    glColor3f(1, 1, 0);
    glBegin(GL_POLYGON);

    radius = 400;
    jumlah_titik = 60;
    x_tengah = 6700;
    y_tengah = -15500;

    for (i = 0; i <= 360; i++)
    {
        float sudut = i * (2 * PI / jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x / 100, y / 100, 55.1);
    }
    glEnd();
    glFlush();

    //ban belakang1
    glColor3f(1, 1, 0);
    glBegin(GL_POLYGON);

    radius = 400;
    jumlah_titik = 60;
    x_tengah = 3500;
    y_tengah = -15500;

    for (i = 0; i <= 360; i++)
    {
        float sudut = i * (2 * PI / jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x / 100, y / 100, 34.9);
    }
    glEnd();
    glFlush();

    //ban belakang2
    glColor3f(1, 1, 0);
    glBegin(GL_POLYGON);

    radius = 400;
    jumlah_titik = 60;
    x_tengah = 6700;
    y_tengah = -15500;

    for (i = 0; i <= 360; i++)
    {
        float sudut = i * (2 * PI / jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x / 100, y / 100, 34.9);
    }
    glEnd();
    glFlush();
    glPopMatrix();


}

void timer(int t)
{
    if (atas) {
        gerak += 1;
    }
    else {
        gerak -= 1;
    }
    if (gerak > 100) {
        atas = false;
    }
    else if (gerak < -200) {
        atas = true;
    }
    glutPostRedisplay();

    /*
    kecepatan mobil berbanding terbalik
    semakin besar nilai glutTimerFunc maka akan semakin pelan gerakannya
    note: angka 50
    */
    glutTimerFunc(50, timer, 0);
}

void jalan() {
    glColor3f(0.0, 0.0, 0.0);
    ab(-250.0, 250.0, -160.0, 57, 32);

    //garis
    glColor3f(1.0, 1.0, 1.0);
    ab(-180.0, -150.0, -159.9, 46.0, 43.0);
    ab(-120.0, -90.0, -159.9, 46.0, 43.0);
    ab(-60.0, -30.0, -159.9, 46.0, 43.0);
    ab(0.0, 30.0, -159.9, 46.0, 43.0);
    ab(60.0, 90.0, -159.9, 46.0, 43.0);
    ab(120.0, 150.0, -159.9, 46.0, 43.0);
    ab(180.0, 200.0, -159.9, 46.0, 43.0);
}

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();
    glRotatef(xrot, 0.0f, 1.0f, 0.0f);
    glRotatef(yrot, 1.0f, 0.0f, 0.0f);

    glTranslatef(xmov, ymov, zmov);
    tampil();
    glFlush();
    glutSwapBuffers();
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(1000, 600);
    glutInitWindowPosition(250, 80);
    glutCreateWindow("Pasar Raya II Salatiga");
    init();
    glutDisplayFunc(tampil);
    glutTimerFunc(1, timer, 0);
    glutKeyboardFunc(keyboard);
    glutReshapeFunc(ukuran);
    glutMouseFunc(mouse);
    glutMotionFunc(mouseMotion);
    glutIdleFunc(display);
    glutMainLoop();
    return 0;
}

void init(void)
{
    glClearColor(0.53, 0.8, 0.98, 0.0);
    glMatrixMode(GL_PROJECTION);
    glEnable(GL_LIGHTING);
    glEnable(GL_COLOR_MATERIAL);
    glEnable(GL_LIGHT0);
    glEnable(GL_DEPTH_TEST);
    is_depth = 1;
    glMatrixMode(GL_MODELVIEW);
    glPointSize(9.0);
    glLineWidth(6.0f);
}

void tampil(void)
{
    if (is_depth)
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    else
        glClear(GL_COLOR_BUFFER_BIT);

    bangunan();
    bangunan_depan();
    jalan();
    mobil();

    glutSwapBuffers();

}

void idle()
{
    if (!mouseDown)
    {
        xrot += 0.3f;
        yrot += 0.4f;
    }
}

void mouse(int button, int state, int x, int y)
{
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        mouseDown = true;
        xdiff = x - yrot;
        ydiff = -y + xrot;
    }
    else
        mouseDown = false;
}

void mouseMotion(int x, int y) {
    if (mouseDown) {
        xrot = x - xdiff;
        yrot = y + ydiff;

        glutPostRedisplay();
    }
}

void keyboard(unsigned char key, int x, int y)
{
    switch (key)
    {
    case 'w':
    case 'W':
        zmov += 10;
        break;
    case 'd':
    case 'D':
        xmov += 10;
        break;
    case 's':
    case 'S':
        zmov -= 10;
        break;
    case 'a':
    case 'A':
        xmov -= 10;
        break;
    case '7':
        ymov += 10;
        break;
    case '9':
        ymov -= 10;
        break;
    case '2':
        xrot += 10;
        break;
    case '8':
        xrot -= 10;
        break;
    case '6':
        yrot += 10;
        break;
    case '4':
        yrot -= 10;
        break;
    case '1':
        zrot += 10;
        break;
    case '3':
        zrot -= 10;
        break;
    case '5':
        if (is_depth)
        {
            is_depth = 0;
            glDisable(GL_DEPTH_TEST);
        }
        else
        {
            is_depth = 1;
            glEnable(GL_DEPTH_TEST);
        }
    }
    glutPostRedisplay();
}

void ukuran(int lebar, int tinggi)
{
    if (tinggi == 0) tinggi = 1;

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(90.0, lebar / tinggi, 5.0, 5000.0);
    glViewport(0, 0, 1000, 600);
    glTranslatef(0.0, 0.0, -220.0);
    glMatrixMode(GL_MODELVIEW);
}
